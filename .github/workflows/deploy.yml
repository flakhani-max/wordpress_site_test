name: Deploy WordPress to Cloud Run

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AR_REPO: wordpress
  IMAGE_NAME: wordpress

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Install gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      - name: Ensure Artifact Registry repo exists
        shell: bash
        run: |
          set -euo pipefail
          if ! gcloud artifacts repositories describe "$AR_REPO" --location="${{ secrets.REGION }}" >/dev/null 2>&1; then
            gcloud artifacts repositories create "$AR_REPO" \
              --repository-format=docker \
              --location="${{ secrets.REGION }}" \
              --description="WordPress images for Cloud Run"
          fi

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev --quiet

      - name: Build & Push Docker image
        shell: bash
        run: |
          set -euo pipefail
          IMAGE_URI="${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/$AR_REPO/$IMAGE_NAME:$(date +%Y%m%d-%H%M%S)-${{ github.sha }}"
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          docker build -t "$IMAGE_URI" .
          docker push "$IMAGE_URI"

      - name: Deploy to Cloud Run (safe env var escaping)
        shell: bash
        run: |
          set -euo pipefail
          SERVICE="${{ secrets.SERVICE_NAME }}"
          REGION="${{ secrets.REGION }}"
          CONNECTION_NAME="${{ secrets.CLOUDSQL_CONNECTION_NAME }}"
          DB_USER="${{ secrets.DB_USER }}"
          DB_PASS="${{ secrets.DB_PASS }}"
          DB_NAME="${{ secrets.DB_NAME }}"
          IMAGE_URI="${IMAGE_URI:?IMAGE_URI not set}"

          # Build a single, safely-escaped env var string
          printf -v ENV_VARS 'WORDPRESS_DB_HOST=%q,WORDPRESS_DB_USER=%q,WORDPRESS_DB_PASSWORD=%q,WORDPRESS_DB_NAME=%q,PORT=%q' \
            "/cloudsql/${CONNECTION_NAME}" \
            "${DB_USER}" \
            "${DB_PASS}" \
            "${DB_NAME}" \
            "8080"

          gcloud run deploy "$SERVICE" \
            --image "$IMAGE_URI" \
            --region "$REGION" \
            --platform managed \
            --allow-unauthenticated \
            --add-cloudsql-instances "$CONNECTION_NAME" \
            --set-env-vars "$ENV_VARS" \
            --cpu 1 \
            --memory 512Mi \
            --concurrency 80 \
            --min-instances 0

          gcloud run services update-traffic "$SERVICE" --region "$REGION" --to-latest

      - name: Show Service URL
        shell: bash
        run: |
          URL=$(gcloud run services describe "${{ secrets.SERVICE_NAME }}" --region "${{ secrets.REGION }}" --format='value(status.url)')
          echo "Deployed URL: $URL"
